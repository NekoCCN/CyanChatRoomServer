<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.nekocc.cyanchatroomserver.infrastructure.persistence.mybatis.mapper.OfflineMessageMapper">
    <resultMap id="OfflineMessageResultMap" type="cc.nekocc.cyanchatroomserver.domain.model.message.OfflineMessage">
        <id property="id_" column="id"/>
        <result property="recipient_type_" column="recipient_type"/>
        <result property="recipient_id_" column="recipient_id" javaType="java.util.UUID"/>
        <result property="content_type_" column="content_type"/>
        <result property="is_encrypted_" column="is_encrypted"/>
        <result property="message_payload_" column="message_payload"/>
        <result property="stored_at_" column="stored_at"/>
    </resultMap>

    <insert id="insert" parameterType="cc.nekocc.cyanchatroomserver.domain.model.message.OfflineMessage">
        INSERT INTO offline_messages (id, recipient_type, recipient_id, content_type, is_encrypted, message_payload, stored_at)
        VALUES (#{id}, #{recipient_type_}, #{recipient_id_}, #{content_type_}::varchar, #{is_encrypted_}, #{message_payload_}, #{stored_at_})
    </insert>

    <select id="findMessagesForUser" resultMap="OfflineMessageResultMap">
        SELECT id, recipient_type, recipient_id, content_type, is_encrypted, message_payload, stored_at
        FROM offline_messages
        WHERE
        (recipient_type = 'USER' AND recipient_id = #{user_id})
        <if test="group_ids != null and !group_ids.isEmpty()">
            OR (recipient_type = 'GROUP' AND recipient_id IN
            <foreach item="item" collection="group_ids" open="(" separator="," close=")">
                #{item}
            </foreach>
            )
        </if>
        ORDER BY stored_at ASC
    </select>

    <delete id="deleteByIds">
        DELETE FROM offline_messages
        WHERE id IN
        <foreach item="item" collection="ids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
</mapper>